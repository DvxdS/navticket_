# Generated by Django 5.2.6 on 2025-10-01 13:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('transport', '0002_alter_route_options_alter_trip_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(db_index=True, help_text='Unique booking reference code (e.g., NVT-20251201-ABC123)', max_length=20, unique=True)),
                ('ticket_price', models.DecimalField(decimal_places=2, help_text='Price per seat', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Platform service fee', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount to pay (price Ã— passengers + fees)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_passengers', models.PositiveIntegerField(default=1, help_text='Number of passengers in this booking', validators=[django.core.validators.MinValueValidator(1)])),
                ('booking_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], db_index=True, default='pending', help_text='Current booking status', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded'), ('failed', 'Failed')], db_index=True, default='pending', help_text='Payment status', max_length=20)),
                ('contact_email', models.EmailField(default='noreply@navticket.com', help_text='Email for booking confirmation', max_length=254)),
                ('contact_phone', models.CharField(blank=True, default='', help_text='Phone for booking notifications', max_length=20)),
                ('qr_code_data', models.TextField(blank=True, help_text='QR code data for ticket validation')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('trip', models.ForeignKey(help_text='The trip being booked', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='transport.trip')),
                ('user', models.ForeignKey(blank=True, help_text='User who made the booking', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('id_type', models.CharField(blank=True, choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driver_license', 'Driver License'), ('voter_id', 'Voter ID')], max_length=20)),
                ('id_number', models.CharField(blank=True, max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age_category', models.CharField(choices=[('adult', 'Adult'), ('child', 'Child'), ('infant', 'Infant')], default='adult', help_text='Age category for pricing', max_length=10)),
                ('seat_number', models.CharField(blank=True, help_text='Assigned seat number', max_length=10)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, help_text='Booking this passenger belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='passengers', to='bookings.booking')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'booking_status'], name='bookings_bo_user_id_2aaaff_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['trip', 'booking_status'], name='bookings_bo_trip_id_b596cd_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_reference'], name='bookings_bo_booking_8a7545_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['created_at'], name='bookings_bo_created_1720a2_idx'),
        ),
    ]
